{"version":3,"sources":["reducers/productConstants.js","reducers/cartConstants.js","reducers/cartReducers.js","reducers/userConstants.js","reducers/orderConstants.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","screens/ProductScreen.js","components/Message.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOderScreen.js","components/Loader.js","screens/OrderScreen.js","screens/RegisterScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","a","axios","get","data","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","reducer","combineReducers","productList","state","products","action","loading","error","productDetails","reviews","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","orderCreate","success","order","orderDetails","orderItems","orderpay","userRegister","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","applyMiddleware","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","Brand","href","Toggle","Collapse","Nav","className","Link","NavDropdown","title","to","Item","onClick","removeItem","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","Img","src","Body","Title","as","Text","rating","numReviews","HomeScreen","useEffect","response","message","sm","md","lg","xl","ProductScreen","history","match","useState","setQty","params","Image","alt","fluid","ListGroup","description","Form","Control","onChange","e","target","Array","keys","Button","push","disabled","Message","children","Alert","CartScreen","location","productId","search","Number","split","console","log","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","index","Authorization","token","createOrder","Loader","Spinner","animation","role","width","height","margin","display","OrderScreen","orderId","user","isDelivered","deliveredAt","isPaid","paidAt","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18d4aa86.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from './cartConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [] , shippingAddress:{}}, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n    }\r\n\r\n    case CART_REMOVE_ITEM:\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.filter((x)=> x.product !== action.payload),\r\n        }\r\n\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n              ...state,\r\n              shippingAddress: action.payload,\r\n            }\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                  ...state,\r\n                  paymentMethod: action.payload,\r\n                }\r\n\r\n        default:\r\n            return state\r\n}\r\n}\r\n\r\n//Actions (techincally a seperate file )\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n  \r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        qty,\r\n      },\r\n    })\r\n  \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n  }\r\n  \r\n  export const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n      type: CART_REMOVE_ITEM,\r\n      payload: id,\r\n    })\r\n  \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n  }\r\n\r\n  export const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n      type: CART_SAVE_SHIPPING_ADDRESS,\r\n      payload: data,\r\n    })\r\n  \r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n  }\r\n\r\n  export const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n      type: CART_SAVE_PAYMENT_METHOD,\r\n      payload: data,\r\n    })\r\n  \r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n  }","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\n\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'","import { createStore,combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer,userRegisterReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\nproductList: productListReducer,\r\nproductDetails: productDetailsReducer,\r\ncart:cartReducer,\r\nuserLogin: userLoginReducer,\r\norderCreate:orderCreateReducer,\r\norderDetails: orderDetailsReducer,\r\norderpay: orderPayReducer,\r\nuserRegister: userRegisterReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\n\r\nconst initialState = {\r\n    cart:{cartItems: cartItemsFromStorage,\r\n    \r\n    shippingAddress: shippingAddressFromStorage},\r\n    \r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    (applyMiddleware(...middleware))\r\n)\r\nexport default store","import {PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,} from './productConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_LIST_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_LIST_SUCCESS:\r\n        return { loading: false, products: action.payload }\r\n      case PRODUCT_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  export const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAILS_REQUEST:\r\n        return { loading: true, ...state }\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false, product: action.payload }\r\n      case PRODUCT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n//Actions\r\n\r\n  export const listProducts = () => async (dispatch) => {\r\n    try {\r\n      dispatch({type: PRODUCT_LIST_REQUEST})\r\n  \r\n      const { data } = await axios.get('/api/products')\r\n  \r\n      dispatch({\r\n        type:PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n}\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n  \r\n      const { data } = await axios.get(`/api/products/${id}`)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  } from '../reducers/userConstants'\r\n  import axios from 'axios'\r\n  \r\n  export const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n        return { loading: true }\r\n      case USER_LOGIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_LOGIN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n  //actions\r\n\r\n  export const login = (email, password) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n      })\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(\r\n        '/api/users/login',\r\n        { email, password },\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      })\r\n  \r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n//logout action\r\n  export const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n  }","import axios from 'axios'\r\n\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET\r\n} from '../reducers/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//order actions\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n//action get order details\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n//pay order action\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout }  from '../reducers/userReducers'\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n    return (\r\n        <header>\r\n        <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n          <Container>\r\n            <Navbar.Brand href='/'>ETShop</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n            <Navbar.Collapse id='basic-navbar-nav'>\r\n              <Nav className='ms-auto'>\r\n                <Nav.Link href='/cart'>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n                {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n                \r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    )\r\n  }\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                 <Col className ='text-center py-3'> Copyright &copy; ET ecom</Col>\r\n                </Row>\r\n                </Container>\r\n        \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Img src={product.image} variant='top' />\r\n        </Link>\r\n  \r\n        <Card.Body>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Card.Title as='div'>\r\n              <strong>{product.name}</strong>\r\n            </Card.Title>\r\n          </Link>\r\n          <Card.Text as='div'>\r\n          <div className='my-3'>\r\n           {product.rating} from {product.numReviews} reviews\r\n            </div>\r\n            <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n          </Card.Text>\r\n  \r\n          <Card.Text as='h3'>${product.price}</Card.Text>\r\n        \r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n\r\nexport default Product\r\n","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { listProducts } from '../reducers/productReducers'\r\n\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n      }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map(product=> (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n               <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\n\r\n\r\nimport {listProductDetails} from '../reducers/productReducers'\r\n\r\n\r\nconst ProductScreen = ({history, match }) => {\r\n    //const product = products.find((p) => p._id === match.params.id)\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n    useEffect(() => {\r\n      \r\n   dispatch(listProductDetails(match.params.id))\r\n    \r\n    }, [dispatch, match])\r\n\r\n const addToCartHandler = () =>{\r\n\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n }\r\n  \r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating\r\n                                value={product.rating}\r\n                                text={`${product.numReviews} reviews`}\r\n                            />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                        <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Price:</Col>\r\n                                    <Col>\r\n                                        <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Status:</Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            {product.countInStock> 0 && (\r\n                                 <ListGroup.Item>\r\n                                 <Row>\r\n                                     <Col>Qty</Col>\r\n                                     <Col>\r\n                                     <Form.Control\r\n                                     as ='select'\r\n                                     value ={qty}\r\n                                     onChange ={(e) => setQty(e.target.value)}\r\n                                     >\r\n                                     {[...Array(product.countInStock).keys()].map((x) => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                          {x + 1}\r\n                                          </option>\r\n                                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                            \r\n                            \r\n                            \r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    onClick = {addToCartHandler}\r\n                                    className='btn-block'\r\n                                    type='button'\r\n                                    disabled={product.countInStock === 0}\r\n                                >\r\n                                    Add To Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nexport default Message","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../reducers/cartReducers'\r\n\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n  \r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n      console.log(qty)\r\n    const dispatch = useDispatch()\r\n  \r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n  \r\n    useEffect(() => {\r\n      if (productId) {\r\n        dispatch(addToCart(productId, qty))\r\n      }\r\n    }, [dispatch, productId, qty])\r\n  \r\n    const removeFromCartHandler = (id) => {\r\n      dispatch(removeFromCart(id))\r\n    }\r\n  \r\n    const checkoutHandler = () => {\r\n      history.push('/login?redirect=shipping')\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n         {cartItems.length=== 0 ? (\r\n          <Message> \r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../reducers/userReducers'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n     \r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps ","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../reducers/cartReducers'\r\nimport CheckoutSteps  from '../components/CheckoutSteps'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n  \r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n      history.push('/payment')\r\n    }\r\n\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../reducers/cartReducers'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n             <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> \r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../reducers/orderReducers'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping')\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment')\r\n  }\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n  \r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails } from '../reducers/orderReducers'\r\n\r\n\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderId = match.params.id\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n  \r\n    if (!loading) {\r\n      //   Calculate prices\r\n      const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n      }\r\n  \r\n      order.itemsPrice = addDecimals(\r\n        order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      )\r\n    }\r\n   \r\n      useEffect(() => {\r\n\r\n            \r\n      dispatch(getOrderDetails(orderId))\r\n    }, [dispatch, orderId])\r\n  \r\n    return loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n      <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n          <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Name: </strong> {order.user.name}\r\n                </p>\r\n                <p>\r\n                  <strong>Email: </strong>{' '}\r\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                </p>\r\n                <p>\r\n                  <strong>Address:</strong>\r\n                  {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                  {order.shippingAddress.postalCode},{' '}\r\n                  {order.shippingAddress.country}\r\n                </p>\r\n                {order.isDelivered ? (\r\n                  <Message variant='success'>\r\n                    Delivered on {order.deliveredAt}\r\n                  </Message>\r\n                ) : (\r\n                  <Message variant='danger'>Not Delivered</Message>\r\n                )}\r\n              </ListGroup.Item>\r\n  \r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <p>\r\n                  <strong>Method: </strong>\r\n                  {order.paymentMethod}\r\n                </p>\r\n                {order.isPaid ? (\r\n                  <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                ) : (\r\n                  <Message variant='danger'>Not Paid</Message>\r\n                )}\r\n              </ListGroup.Item>\r\n  \r\n              <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n                {order.orderItems.length === 0 ? (\r\n                  <Message>Order is empty</Message>\r\n                ) : (\r\n                  <ListGroup variant='flush'>\r\n                    {order.orderItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={item.image}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/product/${item.product}`}>\r\n                              {item.name}\r\n                            </Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Order Summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Items</Col>\r\n                    <Col>${order.itemsPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>${order.shippingPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Tax</Col>\r\n                    <Col>${order.taxPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>${order.totalPrice}</Col>\r\n                   \r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default OrderScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../reducers/userReducers'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen'; \nimport LoginScreen from './screens/LoginScreen';\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOderScreen';\nimport OrderScreen from './screens/OrderScreen'\nimport RegisterScreen from './screens/RegisterScreen'\n\n\nconst App = () => {\n  return (\n\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          \n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/Login' component={LoginScreen} />\n          <Route path='/Shipping' component={ShippingScreen} />\n          <Route path='/Payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n        </Container>\n      </main>\n      <Footer />\n \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport './bootstrap.min.css'\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}